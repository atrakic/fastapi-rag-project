services:
  # prompt for OpenAI API key input in the web interface
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: always
    container_name: client
    environment:
      - API_SERVER=http://server:8000/api
    ports:
      - 3000:3000
    depends_on:
      - server

  server:
    build: ./server
    restart: always
    container_name: server
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
    ports:
      - 8000:8000
    depends_on:
      - qdrant

  # qdrant-setup:
  #   build:
  #     context: ./setup
  #     dockerfile: Dockerfile
  #   container_name: qdrant-setup
  #   tty: true
  #   environment:
  #     - QDRANT_HOST=qdrant
  #     - QDRANT_PORT=6333
  #   volumes:
  #     - $PWD/setup/qdrant_setup.py:/app/qdrant_setup.py
  #   entrypoint: "python qdrant_setup.py"
  #   depends_on:
  #     - qdrant

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333 # Dashboard - localhost:6333/dashboard, REST API - localhost:6333
      - 6334:6334 # GRPC API - localhost:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - $PWD/qdrant_data:/qdrant/storage

configs:
  qdrant_config:
    content: |
      log_level: INFO
